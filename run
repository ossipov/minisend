#!/usr/bin/env bash
COMPOSE="docker-compose"

function stop_containers_if_they_are_running_and_remove_orphans() {
  CONTAINERS_RUNNING=$($COMPOSE ps -q | wc -l)
  if [ "$CONTAINERS_RUNNING" -gt 0 ]; then
    $COMPOSE down --remove-orphans
  fi
}

function create_dotenv_files_if_they_dont_exist() {
  if [ ! -f ".env" ]; then
    cp .env.example .env
  fi
  if [ ! -f "./api/.env" ]; then
    cp .env.example ./api/.env
  fi
}

function build_api() {
  $COMPOSE exec api sh -c "chmod -R ug+rwx storage bootstrap/cache \
    && chown -R php:php storage bootstrap/cache \
    && composer install \
    && php artisan key:generate --force \
    && php artisan migrate:fresh --force \
    && php artisan db:seed --force"
}

function build_ui() {
  $COMPOSE run --rm ui "yarn install"
  $COMPOSE run --rm ui "yarn build"
}

function remove_dotenv_files() {
  rm -f ./api/.env
  rm -f ./ui/.env
  rm -f  .env
}

function clean_vendors() {
  sudo rm -rf ./api/vendor
  sudo rm -rf ./ui/node_modules
  sudo rm -rf ./ui/.nuxt
}

function echo_greeting() {
  echo ''
  echo '███╗░░░███╗██╗███╗░░██╗██╗░██████╗███████╗███╗░░██╗██████╗░'
  echo '████╗░████║██║████╗░██║██║██╔════╝██╔════╝████╗░██║██╔══██╗'
  echo '██╔████╔██║██║██╔██╗██║██║╚█████╗░█████╗░░██╔██╗██║██║░░██║'
  echo '██║╚██╔╝██║██║██║╚████║██║░╚═══██╗██╔══╝░░██║╚████║██║░░██║'
  echo '██║░╚═╝░██║██║██║░╚███║██║██████╔╝███████╗██║░╚███║██████╔╝'
  echo '╚═╝░░░░░╚═╝╚═╝╚═╝░░╚══╝╚═╝╚═════╝░╚══════╝╚═╝░░╚══╝╚═════╝░'
  echo '💌 🅼🅸🅽🅸🆂🅴🅽🅳 | ' "$@"
  echo ''
}

echo_greeting $@;

# If number of parameters is greater then 0
if [ $# -gt 0 ]; then
  if [ "build" == "$1" ]; then
    create_dotenv_files_if_they_dont_exist
    stop_containers_if_they_are_running_and_remove_orphans
    $COMPOSE build
    build_ui
    $COMPOSE up -d
    build_api

  elif [ "rebuild" == "$1" ]; then
    stop_containers_if_they_are_running_and_remove_orphans
    remove_dotenv_files
    create_dotenv_files_if_they_dont_exist
    clean_vendors
    $COMPOSE build --no-cache api
    $COMPOSE build --no-cache ui
    build_ui
    $COMPOSE up -d
    build_api

  elif [ "clean" == "$1" ]; then
    remove_dotenv_files
    clean_vendors

  elif [ "dev" == "$1" ]; then shift 1
    stop_containers_if_they_are_running_and_remove_orphans
    $COMPOSE -f ./docker-compose.dev.yml up -d "$@"

  elif [ "up" == "$1" ]; then shift 1
    stop_containers_if_they_are_running_and_remove_orphans
    $COMPOSE up -d "$@"

  elif [ "down" == "$1" ]; then shift 1
    stop_containers_if_they_are_running_and_remove_orphans

  elif [ "art" == "$1" ]; then shift 1
    export APP_ENV=local
    $COMPOSE exec api php artisan "$@"

  elif [ "test" == "$1" ]; then shift 1
    $COMPOSE exec api php artisan test

  elif [ "composer" == "$1" ]; then shift 1
    $COMPOSE exec api composer "$@"

  else
    $COMPOSE "$@"
  fi
else
  $COMPOSE ps
fi
echo ''
